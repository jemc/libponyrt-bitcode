diff --git a/src/libponyrt/asio/iocp.c b/src/libponyrt/asio/iocp.c
index b7504126..eb6635fc 100644
--- a/src/libponyrt/asio/iocp.c
+++ b/src/libponyrt/asio/iocp.c
@@ -329,22 +329,6 @@ PONY_API void pony_asio_event_unsubscribe(asio_event_t* ev)
   asio_backend_t* b = ponyint_asio_get_backend();
   pony_assert(b != NULL);
 
-  if(ev->noisy)
-  {
-    uint64_t old_count = ponyint_asio_noisy_remove();
-    // tell scheduler threads that asio has no noisy actors
-    // if the old_count was 1
-    if (old_count == 1)
-    {
-      ponyint_sched_unnoisy_asio(SPECIAL_THREADID_IOCP);
-
-      // maybe wake up a scheduler thread if they've all fallen asleep
-      ponyint_sched_maybe_wakeup_if_all_asleep(-1);
-    }
-
-    ev->noisy = false;
-  }
-
   if((ev->flags & ASIO_TIMER) != 0)
   {
     // Need to cancel a timer.
@@ -368,6 +352,22 @@ PONY_API void pony_asio_event_unsubscribe(asio_event_t* ev)
     ev->flags = ASIO_DISPOSABLE;
     pony_asio_event_send(ev, ASIO_DISPOSABLE, 0);
   }
+
+  if(ev->noisy)
+  {
+    uint64_t old_count = ponyint_asio_noisy_remove();
+    // tell scheduler threads that asio has no noisy actors
+    // if the old_count was 1
+    if (old_count == 1)
+    {
+      ponyint_sched_unnoisy_asio(SPECIAL_THREADID_IOCP);
+
+      // maybe wake up a scheduler thread if they've all fallen asleep
+      ponyint_sched_maybe_wakeup_if_all_asleep(-1);
+    }
+
+    ev->noisy = false;
+  }
 }
 
 
